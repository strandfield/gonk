// Copyright (C) 2020 Vincent Chambrin
// This file is part of the 'gonk' project
// For conditions of distribution and use, see copyright notice in LICENSE

// Warning: This file was generated by metagonk, all modifications will be lost. //

#include "qt-core.h"

#include <script/engine.h>
#include <script/namespace.h>
#include <script/typesystem.h>

#include <QByteArray>
#include <QChar>
#include <QDir>
#include <QString>

extern void register_bytearray_file(script::Namespace ns); // defined in bytearray.cpp
extern void register_string_file(script::Namespace ns); // defined in string.cpp
extern void register_char__file(script::Namespace ns); // defined in char_.cpp
extern void register_dir_file(script::Namespace ns); // defined in dir.cpp

class QtCorePlugin : public gonk::Plugin
{
public:

  void load(script::Module m) override
  {
    script::Namespace ns = m.root();
    script::Engine* e = ns.engine();

    e->registerType<QByteArray>();
    e->registerType<QByteArray::FromBase64Result>();
    e->registerType<QByteRef>();
    e->registerType<QChar>();
    e->registerType<QLatin1Char>();
    e->registerType<QDir>();
    e->registerType<QCharRef>();
    e->registerType<QLatin1String>();
    e->registerType<QString::Null>();
    e->registerType<QString>();
    e->registerType<QStringRef>();

    e->registerType<QByteArray::Base64Option>();
    e->registerType<QByteArray::Base64DecodingStatus>();
    e->registerType<QChar::Category>();
    e->registerType<QChar::CombiningClass>();
    e->registerType<QChar::Decomposition>();
    e->registerType<QChar::Direction>();
    e->registerType<QChar::Joining>();
    e->registerType<QChar::JoiningType>();
    e->registerType<QChar::Script>();
    e->registerType<QChar::SpecialCharacter>();
    e->registerType<QChar::UnicodeVersion>();
    e->registerType<QDir::Filter>();
    e->registerType<QDir::SortFlag>();
    e->registerType<QString::NormalizationForm>();
    e->registerType<QString::SectionFlag>();
    e->registerType<QString::SplitBehavior>();

    register_bytearray_file(ns);
    register_string_file(ns);
    register_char__file(ns);
    register_dir_file(ns);
  }

  void unload(script::Module m) override
  {

  }
};

gonk::Plugin* gonk_qt_core_module()
{
  return new QtCorePlugin();
}
